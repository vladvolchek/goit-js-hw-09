{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAEcC,SAASC,cAAc,gBACxBD,SAASC,cAAc,eACrBD,SAASC,cAAc,iBAyBtC,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,WACLH,EACFF,EAAQ,CAAEH,WAAUS,MAAAR,IAEpBG,EAAO,CAAEJ,WAAUS,MAAAR,G,GAEpBA,E,IAjCMJ,SAASC,cAAc,SAE/BY,iBAAiB,UAEtB,SAA2BC,GACzBA,EAAMC,iBAMN,IALA,IAAgCC,EAAAF,EAAMG,cAAcC,SAA5CC,EAAwBH,EAAxBJ,MAAOQ,EAAiBJ,EAAjBK,KAAMC,EAAWN,EAAXO,OACjBC,EAAaC,OAAON,EAAMO,OAC1BC,EAAYF,OAAOL,EAAKM,OACxBE,EAAcH,OAAOH,EAAOI,OAEvBG,EAAI,EAAGA,EAAID,EAAaC,GAAK,EAAG,CAEvC3B,EAAc2B,EAAI,EADLL,EAAaK,EAAIF,GAE3BG,MAAK,SAAAC,G,IAAG5B,EAAQ4B,EAAR5B,SAAU6B,EAAKD,EAALnB,MACjBqB,EAAAnC,GAASoC,OAAOC,QAAQ,uBAAwCC,OAAfjC,EAAS,QAAYiC,OAANJ,EAAM,M,IAEvEK,OAAM,SAAAN,G,IAAG5B,EAAQ4B,EAAR5B,SAAUmC,EAAKP,EAALnB,MAClBqB,EAAAnC,GAASoC,OAAOK,QAAQ,sBAAqCH,OAAfjC,EAAS,QAAYiC,OAANE,EAAM,M","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from \"notiflix\";\n\nconst delay = document.querySelector('[name=delay]');\nconst step = document.querySelector('[name=step]');\nconst amount = document.querySelector('[name=amount]');\nconst form = document.querySelector('.form');\n\nform.addEventListener('submit', handleClickCreate);\n\nfunction handleClickCreate(event) {\n  event.preventDefault();\n  const { delay, step, amount } = event.currentTarget.elements;\n  let inputDelay = Number(delay.value);\n  let inputStep = Number(step.value);\n  let inputAmount = Number(amount.value);\n\n  for (let i = 0; i < inputAmount; i += 1) {\n    let delays = inputDelay + i * inputStep;\n    createPromise(i + 1, delays)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n      })\n  }\n};\n\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  })\n\n\n}"],"names":["$6JpON","parcelRequire","document","querySelector","$ce04d3a99e08e73b$var$createPromise","position","delay4","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","delay","addEventListener","event","preventDefault","_elements","currentTarget","elements","delay1","step1","step","amount1","amount","inputDelay","Number","value","inputStep","inputAmount","i","then","param","delay2","$parcel$interopDefault","Notify","success","concat","catch","delay3","failure"],"version":3,"file":"03-promises.f7d76508.js.map"}